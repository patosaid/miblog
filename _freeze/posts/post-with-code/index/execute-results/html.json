{
  "hash": "69cbaccc3b5733767c158106c682dd3a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Creando plano para mostrar el área geográfica de un estudio con estilo paper'\nauthor: Patricio Said\ndate: '2019-09-21'\nslug: creando-mapa-para-mostrar-la-zona-de-estudio\ncategories: [\"ggplot2\",\"mapa\"]\n#image: \"img/martini.jpg\"\ndescription: \"\"\n---\n\n\n\n![](mapa.png)\n\nEs común mostrar dentro de la metodología de un trabajo el área geográfica de donde se realizó el estudio. Si no estas familiarizado con datos espaciales, aquí te muestro una alternativa de cómo mostrar la zona de estudio (en lugar de ir a GoogleMaps y sacar una screenshot).\n\nPrimero cargamos las librerias, `readr` para importar los datos y `ggplot2` para graficar.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(ggplot2)\n```\n:::\n\n\n\nSegún la zona que deseas mostrar y el nivel de detalle (por ejemplo los límite de los estados/regiones o nombres de ciudades) requerirás de determinadas fuentes de datos. Los paquetes `ggmap` y `rnaturalearth` incluyen conjuntos de datos para plotear el mundo con los límites internacionales, pero a nivel de estado solo está disponible para Estados Unidos. Por lo anterior, en este post trabajo con los datos de [GADM](www.gadm.org).\n\nPara este ejemplo, trabajo con datos de Chile en formato sf provenientes de <https://www.gadm.org/download_country_v3.html>. Puedes descargar los datos para otro país cambiando la URL del siguiente código.\n\nDescargamos los datos y graficamos:\n\n\n\n::: {.cell essage='false'}\n\n```{.r .cell-code}\ncl <- readRDS(url(\"https://geodata.ucdavis.edu/gadm/gadm3.6/Rsf/gadm36_CHL_1_sf.rds\", \"rb\"))\n#class(cl) sf\n\nggplot(data = cl) +\n  geom_sf()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/grafica1-1.png){width=672}\n:::\n:::\n\n\n\nYa tenemos el mapa completo de Chile y con sus regiones delimitadas. Para este ejemplo voy a determinar la zona de estudio desde la Región del Maule hasta la Región de los Ríos, pero tambíen quiero mostrar los alrededores para que el lector pueda ubicarse. Para esto voy a cambiar los límites de la gráfica, de manera de hacer un \"zoom\" en el mapa. Los límites de la gráfica se pueden modificar filtrando el conjunto de datos según las regiones que queremos mostrar o modificar los parámetros `xlim` y `ylim` con un par de coordenadas. Esta última alternativa es más artesanal pero también una solución simple si no tienes experiencia con objetos `sf`.\n\nEl par de coordenadas las puedes obtener desde OpenStreetMap o GoogleMaps.\n\nEl límite superior lo determiné en la coordenada (-27,-80) y el inferior en (-42,-67). En `ggplot()` queda de la siguiente forma:\n\n\n\n::: {.cell essage='false'}\n\n```{.r .cell-code}\nggplot(data = cl) +\n  geom_sf(fill =\"white\")+\n  coord_sf(xlim = c(-67, -80), ylim = c(-42, -27))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/grafica2-1.png){width=672}\n:::\n:::\n\n\n\nCon `geom_rect()` dibujo un rectángulo:\n\n\n\n::: {.cell essage='false'}\n\n```{.r .cell-code}\nggplot(data = cl) +\n  geom_sf(fill =\"white\")+\n  coord_sf(xlim = c(-67, -80), ylim = c(-42, -27))+\n  geom_rect(xmin = -74.8, xmax = -70, ymin = -40.65, ymax = -34.7, \n            fill = NA, colour = \"black\", size = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\nold-style crs object detected; please recreate object with a recent sf::st_crs()\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/grafica3-1.png){width=672}\n:::\n:::\n\n\n\nPara finalizar, con la librería `ggspatial` y su función `annotation_north_arrow()` se puede incluir una flecha. Y de manera rústica agrego manualmente algunos nombres de ciudades de referencia por medio de la función `annotate()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggspatial)\nggplot(data = cl) +\n  geom_sf(fill = \"white\") +\n  annotation_scale(location = \"bl\", width_hint = 0.7) +  # añadir barra de escala\n  annotation_north_arrow(location = \"bl\", which_north = \"true\",  # añadir flecha\n                         pad_x = unit(0, \"in\"), pad_y = unit(0.3, \"in\"),\n                         style = north_arrow_fancy_orienteering) +\n  coord_sf(xlim = c(-67, -80), ylim = c(-42, -28))+  #limite del mapa \n  geom_rect(xmin = -74.8, xmax = -70, ymin = -40.65, ymax = -34.7,  # añado un rectángulo de bordes negros\n            fill = NA, colour = \"black\", size = 1)+\n  annotate(geom = \"text\", label = \"O c é a n o   P a c í f i c o\",  # agrego texto para indicar zonas\n           x = -79, y = -34, fontface = \"italic\",\n           color = \"grey22\", size = 4, angle = 90)+\n  annotate(geom = \"text\", label = \"Coquimbo\",   # agrego ciudades\n           x = -71.34, y = -29.9,\n           color = \"grey22\", size = 3)+\n  annotate(geom = \"text\", label = \"Santiago\",  \n           x = -69.60, y = -33.43,\n           color = \"grey22\", size = 3)+\n  annotate(geom = \"text\", label = \"Los Ángeles\", \n           x = -71.24, y = -37.46,\n           color = \"grey22\", size = 3)+\n  annotate(geom = \"text\", label = \"Zona de estudio\",  \n           x = -75.4, y = -37.675, fontface = c(\"bold\"), angle = 90,\n           color = \"grey22\", size = 3)+\n  xlab(\"Longitud\") + ylab(\"Latitud\")+ # título  de los ejes\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nGuardamos la gráfica con `ggsave()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"mapa.png\", width = 6, height = 8, dpi = \"screen\")\n```\n:::\n\n\n\nTambién puedes mostrar el área de estudio de manera interactiva y simple mediante **Leaftle**:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\nleaflet() %>% addTiles() %>% \n  setView(-77.344, -34.597, zoom = 5) %>% \n    addRectangles(\n    lng1= -74.575, lat1=-34.886,  \n    lng2= -70.192, lat2=-40.830, \n    fillColor = \"transparent\") %>% \n  addProviderTiles(providers$Stamen.Toner)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-b45e6aa36fed5bc63d8d\" style=\"width:100%;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b45e6aa36fed5bc63d8d\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addRectangles\",\"args\":[-34.886,-74.575,-40.83,-70.19199999999999,null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"#03F\",\"weight\":5,\"opacity\":0.5,\"fill\":true,\"fillColor\":\"transparent\",\"fillOpacity\":0.2,\"smoothFactor\":1,\"noClip\":false},null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addProviderTiles\",\"args\":[null,null,null,{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]}],\"setView\":[[-34.597,-77.34399999999999],5,[]],\"limits\":{\"lat\":[-40.83,-34.886],\"lng\":[-74.575,-70.19199999999999]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"../../site_libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"../../site_libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}